const fs = require("fs");
const path = __dirname + "/cache/money.json";
const counterPath = __dirname + "/cache/messageCounter.json";

// ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶≤‡ßã‡¶°/‡¶∏‡ßá‡¶≠
function loadMoney() {
    if (!fs.existsSync(path)) return {};
    return JSON.parse(fs.readFileSync(path));
}
function saveMoney(data) {
    fs.writeFileSync(path, JSON.stringify(data, null, 2));
}

// ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡¶æ‡¶∞ ‡¶≤‡ßã‡¶°/‡¶∏‡ßá‡¶≠
function loadCounter() {
    if (!fs.existsSync(counterPath)) return {};
    return JSON.parse(fs.readFileSync(counterPath));
}
function saveCounter(data) {
    fs.writeFileSync(counterPath, JSON.stringify(data, null, 2));
}

module.exports.config = {
    name: "moneychat",
    version: "1.2.0",
    hasPermssion: 0,
    credits: "CYBER ‚ò¢Ô∏è BOT TEAM (Modified by ChatGPT)",
    description: "Earn money by chatting and bet system",
    commandCategory: "fun",
    usages: "/money | /bet [amount]",
    cooldowns: 3
};

let userBalance = loadMoney();
let messageCounter = loadCounter();

const MESSAGE_REWARD = 5;       // ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡ßá ‡¶ü‡¶æ‡¶ï‡¶æ
const NOTICE_THRESHOLD = 20;    // ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡ß®‡ß¶ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡ßá ‡¶®‡ßã‡¶ü‡¶ø‡¶∂
const MULTIPLIERS = [2, 10, 20]; // ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶®‡ßã ‡¶¨‡ßá‡¶ü ‡¶Æ‡¶æ‡¶≤‡ßç‡¶ü‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡ßü‡¶æ‡¶∞

module.exports.run = async function ({ api, event, args }) {
    const { threadID, senderID } = event;
    if (!userBalance[senderID]) userBalance[senderID] = 1000;

    const command = args[0] ? args[0].toLowerCase() : "check";

    // /money ‡¶¨‡¶æ /check
    if (command === "check" || command === "money") {
        return api.sendMessage(
            `üí∞ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶ü‡¶æ‡¶ï‡¶æ: ${userBalance[senderID]} ‡ß≥`,
            threadID
        );
    }

    // ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶π‡¶≤‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú
    return api.sendMessage(
        "‚ÑπÔ∏è ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®:\n/money ‚Üí ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®\n/bet [amount] ‚Üí Bet ‡¶ï‡¶∞‡ßÅ‡¶®",
        threadID
    );
};

module.exports.handleEvent = async function ({ api, event }) {
    const { senderID, threadID, body } = event;
    if (!body) return;

    if (!userBalance[senderID]) userBalance[senderID] = 1000;
    if (!messageCounter[senderID]) messageCounter[senderID] = 0;

    const args = body.trim().split(" ");

    // -------------------
    // /bet ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°
    if (args[0].toLowerCase() === "/bet") {
        const betAmount = parseInt(args[1]);
        if (!betAmount || isNaN(betAmount) || betAmount <= 0) {
            return api.sendMessage("‚ö†Ô∏è ‡¶∏‡¶†‡¶ø‡¶ï‡¶≠‡¶æ‡¶¨‡ßá ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®, ‡¶Ø‡ßá‡¶Æ‡¶®: /bet 200", threadID);
        }
        if (userBalance[senderID] < betAmount) {
            return api.sendMessage("‚ùå ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ‡¶è‡¶§ ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶®‡ßá‡¶á!", threadID);
        }

        const chosenMultiplier = MULTIPLIERS[Math.floor(Math.random() * MULTIPLIERS.length)];
        const win = Math.random() < 0.5; // ‡ß´‡ß¶% ‡¶ú‡ßá‡¶§‡¶æ‡¶∞ ‡¶∏‡ßÅ‡¶Ø‡ßã‡¶ó
        let resultMessage = "";

        if (win) {
            const winAmount = betAmount * chosenMultiplier;
            userBalance[senderID] += winAmount;
            resultMessage = `
üé∞ ùóñùóîùó¶ùóúùó°ùó¢ ùóïùóòùóß ùó•ùóòùó¶ùó®ùóüùóß üé∞

üíµ Bet: ${betAmount} ‡ß≥
‚ú® Multiplier: ${chosenMultiplier}x
üèÜ You Won: ${winAmount} ‡ß≥
üí∞ ‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶®‡ßç‡¶∏: ${userBalance[senderID]} ‡ß≥
            `;
        } else {
            userBalance[senderID] -= betAmount;
            resultMessage = `
üé∞ ùóñùóîùó¶ùóúùó°ùó¢ ùóïùóòùóß ùó•ùóòùó¶ùó®ùóüùóß üé∞

üíµ Bet: ${betAmount} ‡ß≥
‚ö†Ô∏è Multiplier: ${chosenMultiplier}x
‚ùå You Lost: ${betAmount} ‡ß≥
üí∞ ‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶®‡ßç‡¶∏: ${userBalance[senderID]} ‡ß≥
            `;
        }

        saveMoney(userBalance);
        return api.sendMessage(resultMessage, threadID);
    }

    // -------------------
    // ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡ßá ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°
    userBalance[senderID] += MESSAGE_REWARD;
    messageCounter[senderID] += 1;

    saveMoney(userBalance);
    saveCounter(messageCounter);

    // ‡¶®‡ßã‡¶ü‡¶ø‡¶∂, ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡ß®‡ß¶ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡ßá
    if (messageCounter[senderID] >= NOTICE_THRESHOLD) {
        api.sendMessage(
            `üí∞ @${senderID} ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡ßá ${MESSAGE_REWARD * NOTICE_THRESHOLD} ‡ß≥ ‡¶ú‡¶Æ‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!\nüí∞ ‡¶Æ‡ßã‡¶ü ‡¶ü‡¶æ‡¶ï‡¶æ: ${userBalance[senderID]} ‡ß≥`,
            threadID,
            () => {},
            { mentions: [{ tag: "User", id: senderID }] }
        );
        messageCounter[senderID] = 0; // ‡¶∞‡¶ø‡¶∏‡ßá‡¶ü
        saveCounter(messageCounter);
    }
};
