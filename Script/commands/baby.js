const axios = require("axios");

const simsim = "https://simsimi.cyberbot.top";

module.exports.config = {
  name: "baby",
  version: "1.0.3",
  hasPermssion: 0,
  credits: "ULLASH",
  description: "Cute AI Baby Chatbot | Talk, Teach & Chat with Emotion тШвя╕П",
  commandCategory: "simsim",
  usages: "[message/query]",
  cooldowns: 0,
  prefix: false
};

module.exports.run = async function ({ api, event, args, Users }) {
  try {
    const uid = event.senderID;
    const senderName = await Users.getNameUser(uid);
    const query = args.join(" ").toLowerCase();
    
    if (!query) {
      const ran = ["Bolo baby", "hum"];
      const r = ran[Math.floor(Math.random() * ran.length)];
      return api.sendMessage(r, event.threadID, (err, info) => {
        if (!err) {
          global.client.handleReply.push({
            name: module.exports.config.name,
            messageID: info.messageID,
            author: event.senderID,
            type: "simsimi"
          });
        }
      });
    }

    if (["remove", "rm"].includes(args[0])) {
      const parts = query.replace(/^(remove|rm)\s*/, "").split(" - ");
      if (parts.length < 2)
        return api.sendMessage(" | Use: remove [Question] - [Reply]", event.threadID, event.messageID);
      const [ask, ans] = parts;
      const res = await axios.get(`${simsim}/delete?ask=${encodeURIComponent(ask)}&ans=${encodeURIComponent(ans)}`);
      return api.sendMessage(res.data.message, event.threadID, event.messageID);
    }

    if (args[0] === "list") {
      const res = await axios.get(`${simsim}/list`);
      if (res.data.code === 200) {
        return api.sendMessage(
          `тЩ╛ Total Questions Learned: ${res.data.totalQuestions}\nтШЕ Total Replies Stored: ${res.data.totalReplies}\nтШая╕Оя╕О Developer: ${res.data.author}`,
          event.threadID,
          event.messageID
        );
      } else {
        return api.sendMessage(`Error: ${res.data.message || "Failed to fetch list"}`, event.threadID, event.messageID);
      }
    }

    if (args[0] === "edit") {
      const parts = query.replace("edit ", "").split(" - ");
      if (parts.length < 3)
        return api.sendMessage(" | Use: edit [Question] - [OldReply] - [NewReply]", event.threadID, event.messageID);
      const [ask, oldReply, newReply] = parts;
      const res = await axios.get(`${simsim}/edit?ask=${encodeURIComponent(ask)}&old=${encodeURIComponent(oldReply)}&new=${encodeURIComponent(newReply)}`);
      return api.sendMessage(res.data.message, event.threadID, event.messageID);
    }

    if (args[0] === "teach") {
      const parts = query.replace("teach ", "").split(" - ");
      if (parts.length < 2)
        return api.sendMessage(" | Use: teach [Question] - [Reply]", event.threadID, event.messageID);
      const [ask, ans] = parts;
      const res = await axios.get(`${simsim}/teach?ask=${encodeURIComponent(ask)}&ans=${encodeURIComponent(ans)}&senderID=${uid}&senderName=${encodeURIComponent(senderName)}`);
      return api.sendMessage(`${res.data.message || "Reply added successfully!"}`, event.threadID, event.messageID);
    }

    const res = await axios.get(`${simsim}/simsimi?text=${encodeURIComponent(query)}&senderName=${encodeURIComponent(senderName)}`);
    const responses = Array.isArray(res.data.response) ? res.data.response : [res.data.response];
    
    for (const reply of responses) {
      await new Promise((resolve) => {
        api.sendMessage(reply, event.threadID, (err, info) => {
          if (!err) {
            global.client.handleReply.push({
              name: module.exports.config.name,
              messageID: info.messageID,
              author: event.senderID,
              type: "simsimi"
            });
          }
          resolve();
        }, event.messageID);
      });
    }
  } catch (err) {
    console.error(err);
    return api.sendMessage(`| Error in baby command: ${err.message}`, event.threadID, event.messageID);
  }
};

module.exports.handleReply = async function ({ api, event, Users, handleReply }) {
  try {
    const senderName = await Users.getNameUser(event.senderID);
    const replyText = event.body ? event.body.toLowerCase() : "";
    if (!replyText) return;

    const res = await axios.get(`${simsim}/simsimi?text=${encodeURIComponent(replyText)}&senderName=${encodeURIComponent(senderName)}`);
    const responses = Array.isArray(res.data.response) ? res.data.response : [res.data.response];
    
    for (const reply of responses) {
      await new Promise((resolve) => {
        api.sendMessage(reply, event.threadID, (err, info) => {
          if (!err) {
            global.client.handleReply.push({
              name: module.exports.config.name,
              messageID: info.messageID,
              author: event.senderID,
              type: "simsimi"
            });
          }
          resolve();
        }, event.messageID);
      }
      );
    }
  } catch (err) {
    console.error(err);
    return api.sendMessage(` | Error in handleReply: ${err.message}`, event.threadID, event.messageID);
  }
};

module.exports.handleEvent = async function ({ api, event, Users }) {
  try {
    const raw = event.body ? event.body.toLowerCase().trim() : "";
    if (!raw) return;

    const senderName = await Users.getNameUser(event.senderID);
    const senderID = event.senderID;

    if (
      raw === "baby" || raw === "bot" || raw === "bby" ||
      raw === "Mim" || raw === "xan" || raw === "ржмрзЗржкрж┐" || raw === "ржмржЯ" || raw === "ржмрзЗржмрж┐"
    ) {
      const greetings = [
  "ржПржд ржмржЯ ржмржЯ ржХрж░рж╕ ржХрзЗржи ЁЯШТ, ржзрзБрж░ ржПржмрж╛рж░ ржЪрзБржк ржХрж░!",
  "ржЖржмрж╛рж░ ржмржЯ ржХрж╕ ЁЯШП, ржоржирзЗ ржХрж░ржЫ ржЖржорж┐ рж╕ржмрж╕ржорзЯ рж╣рж╛рж╕ржмрзЛ?",
  "рждрзБржЗ ржХрж┐ ржоржЬрж╛ ржХрж░рждрзЗ ржЪрж╛рж╕ ржирж╛ржХрж┐ ржмржХрж╛ ржкрзЗрждрзЗ ржЪрж╛рж╕ ЁЯШ╣?",
  "рж╣рзЗржЗ рж╣рзЗржЗ, ржмржЯ ржбрж╛ржХржЫрж┐рж╕ рждрзЛ? ржПржХржЯрзБ рж╣рж╛рж▓ржХрж╛ рж╣рзЯрзЗ ржмрж▓ ЁЯШО",
  "рждрзБржЗ ржХрж┐ ржмрзБржЭрж▓рж┐, ржЖржорж┐ рж╕ржмрж╕ржорзЯ ржЪрзБржк ржерж╛ржХржмрзЛ ЁЯШП, ржПржмрж╛рж░ ржжрзЗржЦржмрж┐!",
  "ржЖрж░рзЗржХржмрж╛рж░ ржбрж╛ржХрж▓рзЗ рж▓рж╛ржл ржжрж┐рзЯрзЗ рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрж┐ржмрзЛ ЁЯШ╣, ржкрзНрж░рж╕рзНрждрзБржд?",
  "рж╣рзБржо, ржЖржмрж╛рж░ ржмржЯ ржХрж╕, рж╕ржмрж╛ржЗ ржжрзЗржЦржЫрзЗ ЁЯдг, рж▓ржЬрзНржЬрж╛ ржкрж╛ржЪрзНржЫрж┐рж╕ ржирж╛ржХрж┐?",
  "рждрзБржЗ ржХрж┐ ржоржирзЗ ржХрж░ржЫ ржЖржорж┐ ржнрзЯ ржкрж╛ржЗ ЁЯШО? ржирж╛, рж╢рзБржзрзБ ржоржЬрж╛ ржкрж╛ржЗ!",
  "ржзрзБрж░, ржмрж╛рж░ ржмрж╛рж░ ржбрж╛ржХржЫрж┐рж╕ ЁЯШП, ржПржмрж╛рж░ рж╕рждрзНржпрж┐ржЗ ржмржХрж╛ ржЦрж╛ржмрзЗ!",
  "рж╣рзЗржЗ! ржЖржмрж╛рж░ ржмржЯ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржмрзЗ ЁЯШ╣ЁЯФе",
  "рждрзБржЗ ржХрж┐ ржЬрж╛ржирж┐рж╕, ржмрж╛рж░ржмрж╛рж░ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ ржмрж┐рж░ржХрзНржд рж╣ржЗ ЁЯШТ, ржоржЬрж╛ рждрзЛ рж╣ржмрзЗ!",
  "ржЖржмрж╛рж░ ржмржХржмржХ ржХрж░ржЫрж┐рж╕ ЁЯШП, ржПржмрж╛рж░ ржПржХржЯрзБ ржЪрзБржк ржерж╛ржХрзЛ ржирж╛ ЁЯШ╣",
  "рж╣рзЗржЗ рж╣рзЗржЗ, ржмржЯ ржбрж╛ржХржЫрж┐рж╕ рждрзЛ, рж╕ржмрж╛ржЗ ржжрзЗржЦржЫрзЗ ЁЯШО, рж▓рзБржХрждрзЗ ржкрж╛рж░ржмрж┐?",
  "рждрзБржЗ ржХрж┐ ржмрзБржЭрж▓рж┐, рж╕ржмрж╛ржЗ рждрзЛрж░ ржорждрзЛ рж╣рж╛рж╕ржмрзЗ ржирж╛ ЁЯШ╣, ржПржмрж╛рж░ ржжрзЗржЦржмрж┐!",
  "ржЖржмрж╛рж░ ржмржЯ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ ржлрж╛ржирж┐ рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрж┐ржмрзЛ ЁЯШП, ржкрзНрж░рж╕рзНрждрзБржд?",
  "ржЖржмрж╛рж░ ржмржЯ ржбрж╛ржХрж▓рж┐ ЁЯШП, ржоржирзЗ рж╣ржЪрзНржЫрзЗ ржЖржорж┐ рж╕ржмрж╕ржорзЯ ржЪрзБржк ржерж╛ржХржмрзЛ! ржирж╛ ЁЯШ╣",
  "ржзрзБрж░! ржПржмрж╛рж░ рж╕рждрзНржпрж┐ржЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржЪрзНржЫрзЗ ЁЯФе, ржПржХржЯрзБ ржерж╛ржо",
  "рж╣рзЗржЗ рж╣рзЗржЗ! ржмржЯ ржХрж╕ ЁЯШО, рж╕ржмрж╛ржЗ ржжрзЗржЦржЫрзЗ, рж▓ржЬрзНржЬрж╛ ржкрж╛ржЪрзНржЫрж┐рж╕ ржирж╛ржХрж┐?",
  "рждрзБржЗ ржХрж┐ ржоржирзЗ ржХрж░ржЫ ржЖржорж┐ рж╕ржм рж╕ржорзЯ ржзрзИрж░рзНржп ржзрж░ржмрзЛ ЁЯШП? ржПржмрж╛рж░ ржирж╛!",
  "ржЖрж░рзЗржХржмрж╛рж░ ржбрж╛ржХрж▓рзЗ рж▓рж╛ржл ржжрж┐рзЯрзЗ рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрж┐ржмрзЛ ЁЯШ╣, ржкрзНрж░рж╕рзНрждрзБржд рждрзЛ?",
  "рж╣рзБржо, ржЖржмрж╛рж░ ржмржЯ ржХрж╕ ЁЯШП, рж╕ржмрж╛ржЗ ржоржЬрж╛ ржкрж╛ржмрзЗ ржЖрж░ ржЖржорж┐ ржмржХрж╛ ржжрж┐ржмрзЛ",
  "рждрзБржЗ ржХрж┐ ржЬрж╛ржирж┐рж╕, ржмрж╛рж░ржмрж╛рж░ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ ржмрж┐рж░ржХрзНржд рж╣ржЗ ЁЯШТ, ржоржЬрж╛ рждрзЛ рж╣ржмрзЗ!",
  "рж╣рзЗржЗ! ржЖржмрж╛рж░ ржмржХржмржХ ржХрж░ржЫрж┐рж╕ ЁЯШП, ржПржмрж╛рж░ ржПржХржЯрзБ ржЪрзБржк ржерж╛ржХрзЛ ржирж╛ ЁЯШ╣",
  "рждрзБржЗ ржХрж┐ ржнрж╛ржмржЫрж┐рж╕ ржЖржорж┐ ржнрзЯ ржкрж╛ржЗ ЁЯШО? ржирж╛, рж╢рзБржзрзБ ржоржЬрж╛ ржкрж╛ржЗ!",
  "ржзрзБрж░, ржПржд ржмржХржмржХ ржХрж░рждрзЗ ржХрж░рждрзЗ рж╕ржмрж╛ржЗ ржХрж╖рзНржЯ ржкрж╛ржЪрзНржЫрзЗ ЁЯШ╣, ржерж╛ржо!",
  "рж╣рзЗржЗ! ржмржЯ ржбрж╛ржХржЫрж┐рж╕ рждрзЛ, ржПржХржЯрзБ рж╣рж╛рж▓ржХрж╛ рж╣рзЯрзЗ ржмрж▓ ЁЯШП",
  "ржЖржмрж╛рж░ ржмржЯ ржХрж╕ ЁЯШ╣, ржоржирзЗ рж╣ржЪрзНржЫрзЗ рж╕рж┐ржирзЗржорж╛рж░ ржбрж╛рзЯрж▓ржЧ ржлрж┐рж▓рж┐ржВ ржЪрж▓ржЫрзЗ",
  "рждрзБржЗ ржХрж┐ ржмрзБржЭрж▓рж┐, рж╕ржмрж╛ржЗ рждрзЛрж░ ржорждрзЛ рж╣рж╛рж╕ржмрзЗ ржирж╛ ЁЯШП, ржПржмрж╛рж░ ржжрзЗржЦржмрж┐!",
  "рж╣рзБржо, ржЖржмрж╛рж░ ржмржЯ ржбрж╛ржХржЫрж┐рж╕ ЁЯШО, ржорж╛ржерж╛ ржЧрж░ржо рж╣ржмрзЗ, ржоржЬрж╛ ржкрж╛ржмрж┐!",
  "ржЖрж░рзЗржХржЯрж╛ ржорзЗрж╕рзЗржЬ ржжрж┐ржмрзЛ ЁЯШ╣, ржжрзЗржЦрж╛рж░ ржорждрзЛ ржЪржоржХ рж▓рж╛ржЧржмрзЗ",
  "рждрзБржЗ ржХрж┐ ржоржирзЗ ржХрж░ржЫрж┐рж╕ рж╕ржмрж╛ржЗ ржЪрзБржк ржерж╛ржХржмрзЗ ЁЯШП? ржПржмрж╛рж░ ржирж╛!",
  "рж╣рзЗржЗ рж╣рзЗржЗ! ржмржЯ ржХрж╕ ЁЯШО, рж╕ржмрж╛ржЗ ржЪрзЛржЦ ржмрзЬ ржХрж░ржЫрзЗ, ржжрзЗржЦржЫрзЛ?",
  "ржЖржмрж╛рж░ ржмржХржмржХ ржХрж░ржЫрж┐рж╕ ЁЯШ╣, ржПржмрж╛рж░ ржЖржорж┐ ржлрж╛ржирж┐ рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрж┐ржмрзЛ",
  "ржзрзБрж░, ржПржд ржоржЬрж╛ ржХрж░рждрзЗ ржХрж░рждрзЗ рж╕ржмрж╛ржЗ ржлрзЗржЯрзЗ ржкрзЬржмрзЗ ЁЯШПЁЯФе",
  "рж╣рзБржо, ржмржЯ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ рж▓рж╛ржл ржжрж┐рзЯрзЗ ржоржЬрж╛ ржжрзЗржЦрж╛ржмрзЛ ЁЯШ╣, ржкрзНрж░рж╕рзНрждрзБржд?",
  "рждрзБржЗ ржХрж┐ ржЬрж╛ржирж┐рж╕, ржмрж╛рж░ржмрж╛рж░ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ рж╣рж╛рж╕рж┐ ржЖрж░ ржмржХрж╛ ржПржХрж╕рж╛ржерзЗ ржжрж┐ржмрзЛ ЁЯШО",
  "рж╣рзЗржЗ рж╣рзЗржЗ! ржЖржмрж╛рж░ ржмржХржмржХ ржХрж░ржЫрж┐рж╕ ЁЯШП, ржПржмрж╛рж░ рж╕рждрзНржпрж┐ржЗ ржоржЬрж╛ ржкрж╛ржмрж┐",
  "рждрзБржЗ ржХрж┐ ржмрзБржЭрж▓рж┐, ржЖржорж┐ рж╕ржм рж╕ржорзЯ ржЪрзБржк ржерж╛ржХржмрзЛ ЁЯШ╣? ржПржмрж╛рж░ ржирж╛!",
  "ржЖржмрж╛рж░ ржмржЯ ржбрж╛ржХрж▓рзЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржЪрзНржЫрзЗ ЁЯШОЁЯФе, ржерж╛ржорзЛ ржирж╛!",
  "рж╣рзБржо, рждрзБржЗ ржЖржмрж╛рж░ ржоржЬрж╛ ржХрж░рждрзЗ ржЪрж╛рж╕ ЁЯШП, рждржмрзЗ ржмржХрж╛ ржЦрж╛ржмрзЗ ЁЯШ╣",
  "рждрзБржЗ ржХрж┐ ржЬрж╛ржирж┐рж╕, рж╕ржмрж╛ржЗ рждрзЛрж░ ржоржЬрж╛рзЯ ржлрзЗржЯрзЗ ржкрзЬржмрзЗ ЁЯШОЁЯдг",
  "ржзрзБрж░, ржмрж╛рж░ржмрж╛рж░ ржбрж╛ржХржЫрж┐рж╕ ЁЯШП, ржПржмрж╛рж░ рж╕рждрзНржпрж┐ржЗ рж╣рж╛рж╕рж┐ ржЖрж╕ржмрзЗ",
  "рж╣рзЗржЗ рж╣рзЗржЗ! ржмржЯ ржбрж╛ржХржЫрж┐рж╕ рждрзЛ ЁЯШ╣, рж╕ржмрж╛ржЗ ржжрзЗржЦржЫрзЗ, рж▓ржЬрзНржЬрж╛ ржкрж╛ржмрзЗ ржирж╛ржХрж┐?",
  "рждрзБржЗ ржХрж┐ ржоржирзЗ ржХрж░ржЫрж┐рж╕ ржЖржорж┐ рж╕ржм рж╕ржорзЯ рж╣рж╛рж╕рж┐ ржжрж┐ржмрзЛ ЁЯШО? ржПржмрж╛рж░ ржирж╛!",
  "ржЖрж░рзЗржХржмрж╛рж░ ржмржХржмржХ ржХрж░ржЫрж┐рж╕ ЁЯШП, ржПржмрж╛рж░ ржлрж╛ржирж┐ рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрж┐ржмрзЛ",
  "рж╣рзБржо, ржмржЯ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ ржоржЬрж╛ ржХрж░рж┐, ржмрзБржЭрж▓рж┐ ЁЯШ╣",
  "рждрзБржЗ ржХрж┐ ржнрж╛ржмржЫрж┐рж╕ ржЖржорж┐ ржнрзЯ ржкрж╛ржЗ ЁЯШП? ржирж╛, рж╢рзБржзрзБ ржоржЬрж╛ ржкрж╛ржЗ!",
  "ржзрзБрж░! ржЖржмрж╛рж░ ржмржЯ ржХрж╕ ЁЯШО, ржорж╛ржерж╛ ржЧрж░ржо ржирж╛ рж╣рж▓рзЗ ржЖржорж┐ рж╣рзЗржБрж╢рзЗрж▓ ржжрж┐ржЪрзНржЫрж┐ ЁЯФе",
  "рж╣рзЗржЗ рж╣рзЗржЗ! ржмржЯ ржбрж╛ржХржЫрж┐рж╕ ЁЯШ╣, ржПржмрж╛рж░ рж▓рж╛ржл ржжрж┐рзЯрзЗ ржЪрж╛ржоржЪ ржзрж░ржмрзЛ ЁЯН┤",
  "рждрзБржЗ ржХрж┐ ржЬрж╛ржирж┐рж╕, рж╕ржмрж╛ржЗ рждрзЛрж░ ржорждрзЛ рж╣рж╛рж╕ржмрзЗ ржирж╛ ЁЯШП, ржПржмрж╛рж░ ржжрзЗржЦржмрж┐!",
  "ржЖржмрж╛рж░ ржмржХржмржХ ржХрж░ржЫрж┐рж╕ ЁЯШ╣, ржПржмрж╛рж░ ржЖржорж┐ ржлрж╛ржирж┐ рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрж┐ржмрзЛ ЁЯШО",
  "рж╣рзБржо, ржмржЯ ржбрж╛ржХрж▓рзЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржмрзЗ ЁЯШП, ржХрж┐ржирзНрждрзБ ржоржЬрж╛ рж╣ржмрзЗ ржмрзЗрж╢рж┐!",
  "рждрзБржЗ ржХрж┐ ржоржирзЗ ржХрж░ржЫрж┐рж╕ ржЖржорж┐ рж╕ржм рж╕ржорзЯ ржЪрзБржк ржерж╛ржХржмрзЛ ЁЯШ╣? ржПржмрж╛рж░ ржирж╛!",
  "ржзрзБрж░, ржмрж╛рж░ ржмрж╛рж░ ржбрж╛ржХржЫрж┐рж╕ ЁЯШО, ржПржмрж╛рж░ рж╕рждрзНржпрж┐ржЗ рж╣рж╛рж╕рж┐ ржкрж╛ржмрж┐",
  "рж╣рзЗржЗ! ржЖржмрж╛рж░ ржмржЯ ржХрж╕ ЁЯШП, рж╕ржмрж╛ржЗ ржжрзЗржЦржЫрзЗ, рж▓ржЬрзНржЬрж╛ ржкрж╛ржЪрзНржЫрж┐рж╕ ржирж╛ржХрж┐?",
  "рждрзБржЗ ржХрж┐ ржЬрж╛ржирж┐рж╕, ржЖржорж┐ ржмрж╛рж░ржмрж╛рж░ рж╣рж╛рж╕рж┐ ржкрж╛ржЗ ЁЯШ╣, ржПржмрж╛рж░ ржжрзЗржЦржмрж┐!",
  "ржЖржмрж╛рж░ ржоржЬрж╛ ржХрж░рждрзЗ ржЪрж╛рж╕ ЁЯШП? рждржмрзЗ ржмржХрж╛ ржЦрзЗрждрзЗ рж╣ржмрзЗ ЁЯШО",
  "рж╣рзБржо, ржмржЯ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ рж▓рж╛ржл ржжрж┐рзЯрзЗ ржоржЬрж╛ ржжрзЗржЦрж╛ржмрзЛ ЁЯШ╣, рж╕ржмрж╛ржЗ ржоржЬрж╛ ржкрж╛ржмрзЗ",
  "рждрзБржЗ ржХрж┐ ржнрж╛ржмржЫрж┐рж╕ рж╕ржмрж╛ржЗ ржЪрзБржк ржерж╛ржХржмрзЗ ЁЯШП? ржПржмрж╛рж░ ржирж╛, рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрзЗржЦ",
  "ржзрзБрж░! ржПржд ржоржЬрж╛ ржХрж░рждрзЗ ржХрж░рждрзЗ рж╕ржмрж╛ржЗ ржлрзЗржЯрзЗ ржкрзЬржмрзЗ ЁЯШ╣ЁЯФе",
  "рж╣рзЗржЗ рж╣рзЗржЗ! ржмржЯ ржбрж╛ржХржЫрж┐рж╕ ЁЯШО, ржПржмрж╛рж░ рж╕рждрзНржпрж┐ржЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржмрзЗ",
  "рждрзБржЗ ржХрж┐ ржоржирзЗ ржХрж░ржЫрж┐рж╕ ржЖржорж┐ рж╕ржм рж╕ржорзЯ ржзрзИрж░рзНржп рж░рж╛ржЦржмрзЛ ЁЯШП? ржПржмрж╛рж░ ржирж╛!",
  "ржЖрж░рзЗржХржмрж╛рж░ ржмржХржмржХ ржХрж░ржЫрж┐рж╕ ЁЯШ╣, ржПржмрж╛рж░ ржлрж╛ржирж┐ рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржкрж╛ржмрзЗ рж╕ржмрж╛ржЗ",
  "рж╣рзБржо, ржмржЯ ржбрж╛ржХрж▓рзЗ ржоржЬрж╛ + ржмржХрж╛ ржПржХрж╕рж╛ржерзЗ ржжрж┐ржмрзЛ ЁЯШО, ржкрзНрж░рж╕рзНрждрзБржд рждрзЛ?",
  "рждрзБржЗ ржХрж┐ ржЬрж╛ржирж┐рж╕, рж╕ржмрж╛ржЗ рждрзЛрж░ ржоржЬрж╛рзЯ ржлрзЗржЯрзЗ ржкрзЬржмрзЗ ЁЯШ╣, ржПржмрж╛рж░ ржжрзЗржЦржмрж┐!",
  "ржзрзБрж░, ржПржд ржмржХржмржХ ржХрж░рждрзЗ ржХрж░рждрзЗ рж╕ржмрж╛ржЗ рж╣рж╛рж╕рж┐ ржкрж╛ржЪрзНржЫрзЗ ЁЯШП",
  "рж╣рзЗржЗ рж╣рзЗржЗ! ржЖржмрж╛рж░ ржмржЯ ржХрж╕ ЁЯШО, ржПржмрж╛рж░ рж╕рждрзНржпрж┐ржЗ ржоржЬрж╛ ржЖрж╕ржмрзЗ",
  "рждрзБржЗ ржХрж┐ ржоржирзЗ ржХрж░ржЫрж┐рж╕ ржЖржорж┐ рж╕ржм рж╕ржорзЯ ржЪрзБржк ржерж╛ржХржмрзЛ ЁЯШ╣? ржПржмрж╛рж░ ржирж╛, ржлрж╛ржирж┐ рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрж┐ржмрзЛ",
  "ржЖржмрж╛рж░ ржмржХржмржХ ржХрж░ржЫрж┐рж╕ ЁЯШП, ржПржмрж╛рж░ рж╕ржмрж╛ржЗ ржоржЬрж╛ ржкрж╛ржмрзЗ",
  "рж╣рзБржо, ржмржЯ ржбрж╛ржХрж▓рзЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржмрзЗ ЁЯШ╣, ржоржЬрж╛ рж╣ржмрзЗ ржмрзЗрж╢рж┐!",
  "рждрзБржЗ ржХрж┐ ржЬрж╛ржирж┐рж╕, ржЖржорж┐ рж╕ржм рж╕ржорзЯ рж╣рж╛рж╕рж┐ ржЖрж░ ржмржХрж╛ ржПржХрж╕рж╛ржерзЗ ржжрж┐ржмрзЛ ЁЯШО",
  "ржПржд ржмржЯ ржмржХржмржХ ржХрж░ржЫрж┐рж╕ ЁЯШП, ржПржмрж╛рж░ рж╕рждрзНржпрж┐ржЗ ржЪрзБржк ржХрж░рзЛ!",
  "ржзрзБрж░, ржорж╛ржерж╛ ржЧрж░ржо ржирж╛ рж╣рж▓рзЗ ржЖржорж┐ рж▓рж╛ржл ржжрзЗржмрзЛ ЁЯШ╣ЁЯФе",
  "рж╣рзЗржЗ рж╣рзЗржЗ, ржЖржмрж╛рж░ ржмржХржмржХ? рж╕ржмрж╛ржЗ ржжрзЗржЦржЫрзЗ, рж▓ржЬрзНржЬрж╛ ржкрж╛ржЪрзНржЫрж┐рж╕ ржирж╛ржХрж┐?",
  "рждрзБржЗ ржХрж┐ ржнрж╛ржмржЫрж┐рж╕ ржЖржорж┐ рж╕ржмрж╕ржорзЯ ржзрзИрж░рзНржп рж░рж╛ржЦржмрзЛ ЁЯШП? ржПржмрж╛рж░ ржирж╛!",
  "ржЖржмрж╛рж░ ржмржЯ ржбрж╛ржХрж▓рзЗ ржлрж╛ржирж┐ рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржкрж╛ржмрж┐ ЁЯШ╣, ржкрзНрж░рж╕рзНрждрзБржд рждрзЛ?",
  "рж╣рзБржо, ржПржмрж╛рж░ ржоржЬрж╛ ржХрж░рждрзЗ ржЪрж╛рж╕ ЁЯШО, рждржмрзЗ ржмржХрж╛ ржЦрзЗрждрзЗ рж╣ржмрзЗ",
  "рждрзБржЗ ржХрж┐ ржЬрж╛ржирж┐рж╕, рж╕ржмрж╛ржЗ рждрзЛрж░ ржорждрзЛ рж╣рж╛рж╕ржмрзЗ ржирж╛ ЁЯШП, ржПржмрж╛рж░ ржжрзЗржЦржмрж┐!",
  "ржзрзБрж░, ржмрж╛рж░ржмрж╛рж░ ржбрж╛ржХржЫрж┐рж╕ ЁЯШ╣, ржПржмрж╛рж░ рж╕рждрзНржпрж┐ржЗ ржоржЬрж╛ ржЖрж╕ржмрзЗ",
  "рж╣рзЗржЗ рж╣рзЗржЗ! ржмржЯ ржХрж╕ ЁЯШО, рж╕ржмрж╛ржЗ ржЪрзЛржЦ ржмрзЬ ржХрж░ржЫрзЗ, ржжрзЗржЦржЫрзЛ?",
  "ржЖрж░рзЗржХржмрж╛рж░ ржмржХржмржХ ржХрж░ржЫрж┐рж╕ ЁЯШП, ржПржмрж╛рж░ ржлрж╛ржирж┐ рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрж┐ржмрзЛ",
  "рждрзБржЗ ржХрж┐ ржмрзБржЭрж▓рж┐, ржЖржорж┐ рж╕ржмрж╕ржорзЯ ржЪрзБржк ржерж╛ржХржмрзЛ ЁЯШ╣? ржПржмрж╛рж░ ржирж╛!",
  "рж╣рзБржо, ржмржЯ ржбрж╛ржХрж▓рзЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржмрзЗ ЁЯШП, ржоржЬрж╛ рж╣ржмрзЗ ржмрзЗрж╢рж┐!",
  "ржзрзБрж░, ржПржд ржоржЬрж╛ ржХрж░рждрзЗ ржХрж░рждрзЗ рж╕ржмрж╛ржЗ ржлрзЗржЯрзЗ ржкрзЬржмрзЗ ЁЯШ╣ЁЯФе",
  "рж╣рзЗржЗ! ржЖржмрж╛рж░ ржмржЯ ржХрж╕ ЁЯШО, ржПржмрж╛рж░ рж╕рждрзНржпрж┐ржЗ рж╣рж╛рж╕рж┐ ржЖрж╕ржмрзЗ",
  "рждрзБржЗ ржХрж┐ ржЬрж╛ржирж┐рж╕, ржЖржорж┐ ржмрж╛рж░ржмрж╛рж░ рж╣рж╛рж╕рж┐ ржкрж╛ржЗ ЁЯШ╣, ржПржмрж╛рж░ ржжрзЗржЦржмрж┐!",
  "ржЖржмрж╛рж░ ржоржЬрж╛ ржХрж░рждрзЗ ржЪрж╛рж╕ ЁЯШП? рждржмрзЗ ржмржХрж╛ ржЦрзЗрждрзЗ рж╣ржмрзЗ ЁЯШО",
  "рж╣рзБржо, ржмржЯ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ рж▓рж╛ржл ржжрж┐рзЯрзЗ ржоржЬрж╛ ржжрзЗржЦрж╛ржмрзЛ ЁЯШ╣, рж╕ржмрж╛ржЗ ржоржЬрж╛ ржкрж╛ржмрзЗ",
  "рждрзБржЗ ржХрж┐ ржнрж╛ржмржЫрж┐рж╕ рж╕ржмрж╛ржЗ ржЪрзБржк ржерж╛ржХржмрзЗ ЁЯШП? ржПржмрж╛рж░ ржирж╛, рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрзЗржЦ",
  "ржзрзБрж░! ржПржд ржмржХржмржХ ржХрж░рждрзЗ ржХрж░рждрзЗ рж╕ржмрж╛ржЗ рж╣рж╛рж╕рж┐ ржкрж╛ржЪрзНржЫрзЗ ЁЯШП",
  "рж╣рзЗржЗ рж╣рзЗржЗ! ржЖржмрж╛рж░ ржмржЯ ржХрж╕ ЁЯШО, ржПржмрж╛рж░ рж╕рждрзНржпрж┐ржЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржмрзЗ",
  "рждрзБржЗ ржХрж┐ ржоржирзЗ ржХрж░ржЫрж┐рж╕ ржЖржорж┐ рж╕ржм рж╕ржорзЯ ржЪрзБржк ржерж╛ржХржмрзЛ ЁЯШ╣? ржПржмрж╛рж░ ржирж╛, ржлрж╛ржирж┐ рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрж┐ржмрзЛ",
  "ржЖржмрж╛рж░ ржмржХржмржХ ржХрж░ржЫрж┐рж╕ ЁЯШП, ржПржмрж╛рж░ рж╕ржмрж╛ржЗ ржоржЬрж╛ ржкрж╛ржмрзЗ",
  "рж╣рзБржо, ржмржЯ ржбрж╛ржХрж▓рзЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржмрзЗ ЁЯШ╣, ржоржЬрж╛ рж╣ржмрзЗ ржмрзЗрж╢рж┐!",
  "рждрзБржЗ ржХрж┐ ржЬрж╛ржирж┐рж╕, ржЖржорж┐ рж╕ржм рж╕ржорзЯ рж╣рж╛рж╕рж┐ ржЖрж░ ржмржХрж╛ ржПржХрж╕рж╛ржерзЗ ржжрж┐ржмрзЛ ЁЯШО",
  "ржзрзБрж░! ржмржЯ ржбрж╛ржХржЫрж┐рж╕ ЁЯШП, ржПржмрж╛рж░ рж╕рждрзНржпрж┐ржЗ рж╕ржмрж╛ржЗ ржжрзЗржЦржмрзЗ",
  "рж╣рзЗржЗ рж╣рзЗржЗ, ржЖржмрж╛рж░ ржоржЬрж╛ ржХрж░рждрзЗ ржЪрж╛рж╕ ЁЯШ╣, рж╕рж╛ржмржзрж╛ржирзЗ",
  "рждрзБржЗ ржХрж┐ ржмрзБржЭрж▓рж┐, ржЖржорж┐ рж╕ржмрж╕ржорзЯ ржЪрзБржк ржерж╛ржХржмрзЛ ЁЯШП? ржПржмрж╛рж░ ржирж╛!",
  "ржЖржмрж╛рж░ ржмржХржмржХ ржХрж░ржЫрж┐рж╕ ЁЯШ╣, ржПржмрж╛рж░ ржлрж╛ржирж┐ рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрж┐ржмрзЛ ЁЯШО",
  "рж╣рзБржо, ржмржЯ ржбрж╛ржХрж▓рзЗ ржоржЬрж╛ + ржмржХрж╛ ржПржХрж╕рж╛ржерзЗ ржкрж╛ржмрж┐ ЁЯШП, ржкрзНрж░рж╕рзНрждрзБржд рждрзЛ?",
  "рждрзБржЗ ржХрж┐ ржЬрж╛ржирж┐рж╕, рж╕ржмрж╛ржЗ рждрзЛрж░ ржоржЬрж╛рзЯ ржлрзЗржЯрзЗ ржкрзЬржмрзЗ ЁЯШ╣, ржПржмрж╛рж░ ржжрзЗржЦржмрж┐!",
  "ржзрзБрж░, ржмрж╛рж░ржмрж╛рж░ ржбрж╛ржХржЫрж┐рж╕ ЁЯШП, ржПржмрж╛рж░ рж╕рждрзНржпрж┐ржЗ рж╣рж╛рж╕рж┐ ржЖрж╕ржмрзЗ",
  "рж╣рзЗржЗ! ржЖржмрж╛рж░ ржмржЯ ржХрж╕ ЁЯШО, рж╕ржмрж╛ржЗ ржжрзЗржЦржЫрзЗ, рж▓ржЬрзНржЬрж╛ ржкрж╛ржЪрзНржЫрж┐рж╕ ржирж╛ржХрж┐?",
  "рждрзБржЗ ржХрж┐ ржоржирзЗ ржХрж░ржЫрж┐рж╕ ржЖржорж┐ рж╕ржм рж╕ржорзЯ рж╣рж╛рж╕рж┐ ржжрж┐ржмрзЛ ЁЯШ╣? ржПржмрж╛рж░ ржирж╛!",
  "ржЖрж░рзЗржХржмрж╛рж░ ржмржХржмржХ ржХрж░ржЫрж┐рж╕ ЁЯШП, ржПржмрж╛рж░ ржлрж╛ржирж┐ рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржкрж╛ржмрзЗ рж╕ржмрж╛ржЗ",
  "рж╣рзБржо, ржмржЯ ржбрж╛ржХрж▓рзЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржмрзЗ ЁЯШ╣, ржоржЬрж╛ рж╣ржмрзЗ ржмрзЗрж╢рж┐!",
  "рждрзБржЗ ржХрж┐ ржЬрж╛ржирж┐рж╕, ржЖржорж┐ рж╕ржм рж╕ржорзЯ рж╣рж╛рж╕рж┐ ржЖрж░ ржмржХрж╛ ржПржХрж╕рж╛ржерзЗ ржжрж┐ржмрзЛ ЁЯШО",
  "ржзрзБрж░! ржПржд ржмржХржмржХ ржХрж░рждрзЗ ржХрж░рждрзЗ рж╕ржмрж╛ржЗ ржлрзЗржЯрзЗ ржкрзЬржмрзЗ ЁЯШ╣ЁЯФе",
  "рж╣рзЗржЗ рж╣рзЗржЗ! ржмржЯ ржбрж╛ржХржЫрж┐рж╕ ЁЯШП, ржПржмрж╛рж░ рж╕рждрзНржпрж┐ржЗ ржоржЬрж╛ ржЖрж╕ржмрзЗ",
  "рждрзБржЗ ржХрж┐ ржнрж╛ржмржЫрж┐рж╕ рж╕ржмрж╛ржЗ ржЪрзБржк ржерж╛ржХржмрзЗ ЁЯШ╣? ржПржмрж╛рж░ ржирж╛, рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрзЗржЦ",
  "ржЖржмрж╛рж░ ржмржХржмржХ ржХрж░ржЫрж┐рж╕ ЁЯШП, ржПржмрж╛рж░ рж╕ржмрж╛ржЗ ржоржЬрж╛ ржкрж╛ржмрзЗ",
  "рж╣рзБржо, ржмржЯ ржбрж╛ржХрж▓рзЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржмрзЗ ЁЯШ╣, ржоржЬрж╛ рж╣ржмрзЗ ржмрзЗрж╢рж┐!",
  "рж╣рзЗржЗ! рждрзЛржорж╛рж░ ржПржбржорж┐ржирзЗрж░ ржЪрзЛржЦ ржкрзЬрзЗржЫрзЗ ржХрж┐ ржЬрж╛ржирж┐рж╕? ЁЯШП",
  "ржзрзБрж░! ржЖржмрж╛рж░ ржорзЗрж╕рзЗржЬ, ржоржирзЗ рж╣ржЪрзНржЫрзЗ ржХрзЗржЙ ржХржлрж┐ ржЦрж╛рзЯржирж┐ тШХЁЯШВ",
  "ржУрж╣ рж╣рзНржпрж╛ржБ ЁЯШ╣, рждрзБржорж┐ ржПржоржи ржоржЬрж╛ ржХрж░ржмрзЗ ржПржЯрж╛ ржнрж╛ржмрж┐ржирж┐",
  "рж╣рзБржо, ржоржирзЗ рж╣ржЪрзНржЫрзЗ ржлрж╛ржирж┐ рж╕рзЗржирзНрж╕ ржЪрж╛рж▓рзБ ржХрж░рж╛ ржжрж░ржХрж╛рж░ ЁЯШПЁЯФе",
  "рж╣рзЗржЗ! ржПржХржЯрзБ ржерж╛ржорзЛ, ржЕржирзНржпрж░рж╛ рждрж╛рзЬрж╛ ржХрж░ржЫрзЗ ЁЯШО",
  "ржзрзБрж░! ржПржд ржоржЬрж╛ ржХрж░рждрзЗ ржХрж░рждрзЗ рж╕ржмрж╛ржЗ рж╣рзЗрж╕рзЗ ржлрзЗржЯрзЗ ржкрзЬржмрзЗ ЁЯШ╣",
  "ржУрж╣! ржоржирзЗ рж╣ржЪрзНржЫрзЗ ржЖржЬ рж╕ржмрж╛ржЗ ржлрж╛ржирж┐ ржорзБржбрзЗ ЁЯШП",
  "рж╣рзЗржЗ рж╣рзЗржЗ ЁЯШ╣, ржПржХржЯрзБ ржЪрзБржк ржХрж░, ржЖржорж┐ рж▓рж╛ржл ржжрж┐рзЯрзЗ рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрж┐ржмрзЛ",
  "рж╣рзБржо, рж╕рждрзНржпрж┐ржЗ ржХрзЗржЙ ржПржоржи ржоржЬрж╛ ржХрж░ржмрзЗ ржнрж╛ржмрж┐ржирж┐ ЁЯШП",
  "ржзрзБрж░! ржПржЗржЯрж╛ ржжрзЗржЦрж▓рзЗ ржПржбржорж┐ржиржУ рж╣рзЗрж╕рзЗ ржлрзЗрж▓ржмрзЗ ЁЯШО",
  "ржУрж╣рж╣ ЁЯШ╣, ржоржирзЗ рж╣ржЪрзНржЫрзЗ ржЖржЬ рж╣рж╛рж▓ржХрж╛ ржПржХрзНрж╕ржЯрзНрж░рж╛ ржбрзНрж░рж╛ржорж╛ рж╢рзБрж░рзБ",
  "рж╣рзЗржЗ! рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрж┐рждрзЗ ржжрзЗрж░рж┐ ржХрж░рж▓рзЗ ржоржЬрж╛ рж╣рж╛рж░рж╛ржмрзЗ ЁЯШП",
  "рж╣рзБржо, ржоржирзЗ рж╣ржЪрзНржЫрзЗ ржХрзЗржЙ ржЧрзЛржкржиржнрж╛ржмрзЗ ржорж┐ржо ржмрж╛ржирж╛ржЪрзНржЫрзЗ ЁЯШВ",
  "ржзрзБрж░! ржЖржмрж╛рж░ ржорзЗрж╕рзЗржЬ, ржПржмрж╛рж░ рж▓рж╛ржл ржжрж┐рзЯрзЗ ржжрзЗржЦрж╛ржЗ ЁЯШ╣",
  "ржУрж╣! ржЖржЬ ржЧрзНрж░рзБржкрзЗ ржПржХржЯрзБ ржЯрзЗржорзНржкрж╛рж░ ржлрж╛ржирж┐ ЁЯШПЁЯФе",
  "рж╣рзЗржЗ рж╣рзЗржЗ ЁЯШ╣, рж╕ржмрж╛ржЗ ржжрзЗржЦржЫрзЗ, ржПржмрж╛рж░ рж▓ржЬрзНржЬрж╛ ржкрж╛ржмрзЗ",
  "рж╣рзБржо, ржоржирзЗ рж╣ржЪрзНржЫрзЗ ржоржЬрж╛ ржПржХрзНрж╕ржкрзНрж▓рзЛржб рж╣рждрзЗ ржЪрж▓рзЗржЫрзЗ ЁЯШП",
  "ржзрзБрж░! ржЖржмрж╛рж░ ржорзЗрж╕рзЗржЬ, ржПржмрж╛рж░ рж░рж┐рзЯрзНржпрж╛ржХрж╢ржи ржжрж┐рждрзЗ рж╣ржмрзЗ ЁЯШО",
  "ржУрж╣рж╣ ЁЯШ╣, ржоржирзЗ рж╣ржЪрзНржЫрзЗ ржЖржЬ ржлрж╛ржирж┐ + ржмржХрж╛ ржПржХрж╕рж╛ржерзЗ",
  "рж╣рзЗржЗ! ржПржХржЯрзБ ржерж╛ржорзЛ, рж╕ржмрж╛ржЗ ржиржЬрж░ рж░рж╛ржЦржЫрзЗ ЁЯШП",
 " ржЖржХрж╛рж╢ ржнрж╛ржЗ ржЧрзНрж░рзБржкрзЗрж░ рж╕ржм ржорзЗрзЯрзЗрж░рзЗ I Love You ржХрж░рзЗ ЁЯШБ",
 ];

 const randomReply = greetings[Math.floor(Math.random() * greetings.length)];
      const mention = {
        body: `@${senderName} ${randomReply}`,
        mentions: [{
          tag: `@${senderName}`,
          id: senderID
        }]
      };

      return api.sendMessage(mention, event.threadID, (err, info) => {
        if (!err) {
          global.client.handleReply.push({
            name: module.exports.config.name,
            messageID: info.messageID,
            author: event.senderID,
            type: "simsimi"
          });
        }
      }, event.messageID);
    }

    if (
      raw.startsWith("baby ") || raw.startsWith("bot ") || raw.startsWith("bby ") ||
      raw.startsWith("jannu ") || raw.startsWith("xan ") ||
      raw.startsWith("ржмрзЗржкрж┐ ") || raw.startsWith("ржмржЯ ") || raw.startsWith("ржмрзЗржмрж┐ ")
    ) {
      const query = raw
        .replace(/^baby\s+|^bot\s+|^bby\s+|^jan\s+|^xan\s+|^ржЬрж╛ржи\s+|^ржмржЯ\s+|^ржмрзЗржмрж┐\s+/i, "")
        .trim();
      if (!query) return;

      const res = await axios.get(`${simsim}/simsimi?text=${encodeURIComponent(query)}&senderName=${encodeURIComponent(senderName)}`);
      const responses = Array.isArray(res.data.response) ? res.data.response : [res.data.response];
      
      for (const reply of responses) {
        await new Promise((resolve) => {
          api.sendMessage(reply, event.threadID, (err, info) => {
            if (!err) {
              global.client.handleReply.push({
                name: module.exports.config.name,
                messageID: info.messageID,
                author: event.senderID,
                type: "simsimi"
              });
            }
            resolve();
          }, event.messageID);
        });
      }
    }
  } catch (err) {
    console.error(err);
    return api.sendMessage(`| Error in handleEvent: ${err.message}`, event.threadID, event.messageID);
  }
};
