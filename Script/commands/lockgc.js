// lockgc.js
// ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶≤‡¶ï/‡¶Ü‡¶®‡¶≤‡¶ï ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ
// ‡¶®‡¶®-‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡¶¶‡ßá‡¶∞ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶¨‡ßç‡¶≤‡¶ï ‡¶ï‡¶∞‡¶¨‡ßá

module.exports.config = {
  name: "lockgc",
  version: "1.0.0",
  credits: "Akash",
  description: "Lock & Unlock Group messages using /lockgc"
};

let lockStatus = {}; // group-wise ‡¶≤‡¶ï ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏

// ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
module.exports.run = async function({ api, event, args }) {
  const threadID = event.threadID;
  const senderID = event.senderID;

  // ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶á‡¶®‡¶´‡ßã
  const threadInfo = await api.getThreadInfo(threadID);
  const isAdmin = threadInfo.adminIDs.some(e => e.id == senderID);

  if (!isAdmin) {
    return api.sendMessage("‚ùå ‡¶è‡¶á ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá!", threadID, event.messageID);
  }

  const command = args[0]?.toLowerCase();

  if (command === "lockgc") {
    lockStatus[threadID] = true;
    return api.sendMessage("üîí ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶≤‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‚Äî ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡¶∞‡¶æ ‡¶≤‡¶ø‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡•§", threadID);
  }

  if (command === "unlockgc") {
    lockStatus[threadID] = false;
    return api.sendMessage("üîì ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶Ü‡¶®‡¶≤‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‚Äî ‡¶∏‡¶¨‡¶æ‡¶á ‡¶≤‡¶ø‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡•§", threadID);
  }

  if (command === "statusgc") {
    const status = lockStatus[threadID] ? "üîí ‡¶≤‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶Ü‡¶õ‡ßá" : "üîì ‡¶Ü‡¶®‡¶≤‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶Ü‡¶õ‡ßá";
    return api.sendMessage(`üìå ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá‡¶∞ ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏: ${status}`, threadID);
  }

  // ‡¶π‡ßá‡¶≤‡ßç‡¶™ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú
  const help = `üõ†Ô∏è ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶≤‡¶ï ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞:\n‚Ä¢ /lockgc lockgc ‚Äî ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶≤‡¶ï ‡¶ï‡¶∞‡¶¨‡ßá\n‚Ä¢ /lockgc unlockgc ‚Äî ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶Ü‡¶®‡¶≤‡¶ï ‡¶ï‡¶∞‡¶¨‡ßá\n‚Ä¢ /lockgc statusgc ‚Äî ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá`;
  return api.sendMessage(help, threadID);
};

// ‡¶®‡¶®-‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶¨‡ßç‡¶≤‡¶ï
module.exports.handleEvent = async function({ api, event }) {
  const threadID = event.threadID;
  const senderID = event.senderID;

  if (lockStatus[threadID]) {
    const threadInfo = await api.getThreadInfo(threadID);
    const isAdmin = threadInfo.adminIDs.some(e => e.id == senderID);

    if (!isAdmin) {
      try {
        await api.unsendMessage(event.messageID);
      } catch (e) {
        // ‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶≤‡ßá ‡¶∏‡¶æ‡¶á‡¶≤‡ßá‡¶®‡ßç‡¶ü ‡¶´‡ßá‡¶á‡¶≤
      }
    }
  }
};
