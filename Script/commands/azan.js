// azan.js
// Auto Azan notification in ALL groups (Real-time from API)
const axios = require("axios");
const schedule = require("node-schedule");

module.exports.config = {
    name: "azan",
    version: "4.0.0",
    hasPermssion: 0,
    credits: "Akash",
    description: "ржкрзНрж░рждрж┐ржжрж┐ржи ржЖржЬрж╛ржирзЗрж░ рж╕ржарж┐ржХ рж╕ржорзЯ рж╕ржм ржЧрзНрж░рзБржкрзЗ ржЕржЯрзЛ ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи ржкрж╛ржарж╛ржмрзЗ",
    commandCategory: "Islamic",
    usages: "ржЕржЯрзЛ рж░рж╛ржи",
    cooldowns: 5
};

let jobs = [];

// ржЖржЬрж╛ржирзЗрж░ ржЬржирзНржп API ржерзЗржХрзЗ ржЯрж╛ржЗржо ржирж┐рзЯрзЗ рж╢рж┐ржбрж┐ржЙрж▓ рж╕рзЗржЯ ржХрж░рж╛
async function scheduleAzan(api) {
    try {
        // ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ ржЖржЬрж╛ржирзЗрж░ рж╕ржорзЯрзЗрж░ API
        const res = await axios.get("http://api.aladhan.com/v1/timingsByCity", {
            params: {
                city: "Dhaka",
                country: "Bangladesh",
                method: 2 // Islamic Society of North America
            }
        });

        const timings = res.data.data.timings;

        // ржЖржЧрзЗрж░ рж╕ржм ржЬржм ржмржирзНржз ржХрж░рж╛
        jobs.forEach(job => job.cancel());
        jobs = [];

        // ржЖржЬрж╛ржирзЗрж░ ржЯрж╛ржЗржо ржЕржирзБржпрж╛рзЯрзА ржирждрзБржи ржЬржм рждрзИрж░рж┐
        for (const [prayer, time] of Object.entries(timings)) {
            // рж╢рзБржзрзБржорж╛рждрзНрж░ рзлржЯрж┐ ржирж╛ржорж╛ржЬрзЗрж░ ржЬржирзНржп
            if (["Fajr", "Dhuhr", "Asr", "Maghrib", "Isha"].includes(prayer)) {
                let [hour, minute] = time.split(":").map(Number);

                // ржврж╛ржХрж╛рж░ ржЯрж╛ржЗржо ржЕржирзБржпрж╛рзЯрзА рж╢рж┐ржбрж┐ржЙрж▓
                const rule = new schedule.RecurrenceRule();
                rule.tz = "Asia/Dhaka";
                rule.hour = hour;
                rule.minute = minute;

                const job = schedule.scheduleJob(rule, function() {
                    const msg = `__ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо ЁЯХМ__\n${prayer} ржПрж░ ржЖржЬрж╛ржи ржжрж┐ржЪрзНржЫрзЗ...!! рж╕ржмрж╛ржЗ ржУржпрзБ ржХрж░рзЗ ржирж╛ржорж╛ржЬрзЗрж░ ржЬржирзНржп ржкрзНрж░рж╕рзНрждрзБржд рж╣ржУ ржЗржирж╢рж╛ржЖрж▓рзНрж▓рж╛рж╣ ЁЯд▓`;

                    for (const threadID of global.data.allThreadID) {
                        api.sendMessage(msg, threadID);
                    }
                });

                jobs.push(job);
            }
        }

        console.log("тЬЕ ржЖржЬрж╛ржи ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи рж╕рж┐рж╕рзНржЯрзЗржо ржЪрж╛рж▓рзБ рж╣рзЯрзЗржЫрзЗ (рж╕ржарж┐ржХ рж╕ржорзЯ ржЕржирзБржпрж╛рзЯрзА)!");
    } catch (err) {
        console.error("тЭМ ржЖржЬрж╛ржи ржЯрж╛ржЗржо ржирзЗржУрзЯрж╛рж░ рж╕ржорзЯ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗ:", err.message);
    }
}

module.exports.onLoad = async function({ api }) {
    await scheduleAzan(api);

    // ржкрзНрж░рждрж┐ рзирзк ржШржирзНржЯрж╛рзЯ API ржерзЗржХрзЗ ржирждрзБржи рж╕ржорзЯ ржирж┐рзЯрзЗ рж╢рж┐ржбрж┐ржЙрж▓ ржЖржкржбрзЗржЯ ржХрж░ржмрзЗ
    schedule.scheduleJob("0 0 * * *", function() {
        scheduleAzan(api);
    });
};

module.exports.run = async function() {
    // ржЕржЯрзЛ рж░рж╛ржи ржХрж░ржмрзЗ, ржХрзЛржирзЛ ржХржорж╛ржирзНржбрзЗрж░ ржжрж░ржХрж╛рж░ ржирзЗржЗ
};
